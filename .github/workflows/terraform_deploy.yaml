name: 'Terraform'

on: push

env:
  TF_LOG: INFO
  TF_INPUT: false

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      id-token: write # <-- THIS IS THE CRUCIAL PERMISSION
      contents: read  # To checkout the repository code

    # Use the Bash shell regardless whether the GitHub Actions runner is 
    # ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init

    # Run a terraform fmt for push
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    # Run a terraform validate
    # Run even if formatting fails
    - name: Terraform Validate
      id: validate
      if: (success() || failure())
      run: terraform validate


    # --- AWS Authentication ---
    # This step configures AWS credentials using OIDC.
    # Replace <YOUR_AWS_ACCOUNT_ID> and GitHubActions-Terraform-Deployer with your actual values.
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        # The ARN of the IAM Role you created for GitHub Actions in AWS
        # This role should have permissions to deploy your AWS resources (EC2, S3, DynamoDB, etc.)
        role-to-assume: arn:aws:iam::508140293808:role/GHA-Terraform-Infra
        aws-region: us-east-1 # Or whatever AWS region your infrastructure is in